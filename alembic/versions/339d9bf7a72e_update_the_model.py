import sqlmodel
"""update the model

Revision ID: 339d9bf7a72e
Revises: 95b9f6ba2def
Create Date: 2024-06-10 20:53:06.026831

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '339d9bf7a72e'
down_revision: Union[str, None] = '95b9f6ba2def'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('connectuc')
    op.add_column('email', sa.Column('is_active', sa.Boolean(), nullable=False))
    op.create_index(op.f('ix_email_email'), 'email', ['email'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_email_email'), table_name='email')
    op.drop_column('email', 'is_active')
    op.create_table('connectuc',
    sa.Column('userid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('cid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('element', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('rarity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('level', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('rank', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('equipment', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('relics', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('properties', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('skills', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('base_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('figure_path', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['cid'], ['character.cid'], name='connectuc_cid_fkey'),
    sa.ForeignKeyConstraint(['userid'], ['userinfo.userid'], name='connectuc_userid_fkey'),
    sa.PrimaryKeyConstraint('userid', 'cid', name='connectuc_pkey')
    )
    # ### end Alembic commands ###
