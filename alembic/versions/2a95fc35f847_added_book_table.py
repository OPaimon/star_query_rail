import sqlmodel
"""Added book table

Revision ID: 2a95fc35f847
Revises: 
Create Date: 2024-06-09 15:19:13.850646

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2a95fc35f847'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('character',
    sa.Column('cid', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('cid')
    )
    op.create_table('email',
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('psw', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('email')
    )
    op.create_table('userinfo',
    sa.Column('userid', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('cookie', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('userid')
    )
    op.create_table('connecteu',
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('userid', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['email'], ['email.email'], ),
    sa.ForeignKeyConstraint(['userid'], ['userinfo.userid'], ),
    sa.PrimaryKeyConstraint('email', 'userid')
    )
    op.create_table('connectuc',
    sa.Column('userid', sa.Integer(), nullable=False),
    sa.Column('cid', sa.Integer(), nullable=False),
    sa.Column('element', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('rarity', sa.Integer(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('rank', sa.Integer(), nullable=False),
    sa.Column('equipment', sa.JSON(), nullable=True),
    sa.Column('relics', sa.JSON(), nullable=True),
    sa.Column('properties', sa.JSON(), nullable=True),
    sa.Column('skills', sa.JSON(), nullable=True),
    sa.Column('base_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('figure_path', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['cid'], ['character.cid'], ),
    sa.ForeignKeyConstraint(['userid'], ['userinfo.userid'], ),
    sa.PrimaryKeyConstraint('userid', 'cid')
    )
    op.drop_table('Connect')
    op.drop_table('User')
    op.drop_table('Character')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Character',
    sa.Column('cid', sa.INTEGER(), server_default=sa.text('nextval(\'"Character_cid_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('cid', name='Character_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('User',
    sa.Column('userid', sa.INTEGER(), server_default=sa.text('nextval(\'"User_userid_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cookie', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('userid', name='User_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('Connect',
    sa.Column('userid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('cid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('element', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('rarity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('level', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('rank', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('equipment', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('relics', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('properties', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('skills', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('base_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('figure_path', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['cid'], ['Character.cid'], name='Connect_cid_fkey'),
    sa.ForeignKeyConstraint(['userid'], ['User.userid'], name='Connect_userid_fkey'),
    sa.PrimaryKeyConstraint('userid', 'cid', name='Connect_pkey')
    )
    op.drop_table('connectuc')
    op.drop_table('connecteu')
    op.drop_table('userinfo')
    op.drop_table('email')
    op.drop_table('character')
    # ### end Alembic commands ###
